name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd app/backend
          pip install -r requirements.txt
      - name: Run tests
        run: |
          cd app/backend
          python -m pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./app/backend
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/url-shortener-backend:latest
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./app/frontend
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/url-shortener-frontend:latest

  infrastructure:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
          terraform_wrapper: false
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="key_name=${{ secrets.AWS_KEY_NAME }}"
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve -var="key_name=${{ secrets.AWS_KEY_NAME }}"

  deploy:
    needs: infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"
          terraform_wrapper: false
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      - name: Terraform Refresh
        run: |
          cd terraform
          terraform refresh -var="key_name=${{ secrets.AWS_KEY_NAME }}"
      - name: Get instance IP
        id: instance_ip
        run: |
          cd terraform
          echo "instance_ip=$(terraform output -raw instance_public_ip)" >> "$GITHUB_OUTPUT"
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.instance_ip.outputs.instance_ip }} >> ~/.ssh/known_hosts
      - name: Deploy application
        run: |
          ssh ubuntu@${{ steps.instance_ip.outputs.instance_ip }} 'bash -s' < scripts/deploy.sh 